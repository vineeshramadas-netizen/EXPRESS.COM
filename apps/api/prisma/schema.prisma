generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String   @id @default(cuid())
  email         String   @unique
  passwordHash  String
  name          String
  role          Role     @default(USER)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  bookings      Booking[]
  reviews       Review[]
}

enum Role {
  USER
  ADMIN
}

model Hotel {
  id          String   @id @default(cuid())
  name        String
  address     String
  city        String
  latitude    Float
  longitude   Float
  description String
  images      Json
  amenities   String[]
  policies    String?
  rating      Float     @default(0)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  rooms       Room[]
  reviews     Review[]
}

model Room {
  id           String   @id @default(cuid())
  hotel        Hotel    @relation(fields: [hotelId], references: [id])
  hotelId      String
  title        String
  type         String
  pricePerNight Int
  maxGuests    Int
  totalUnits   Int
  images       Json
  amenities    String[]
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  bookings     Booking[]
}

model Booking {
  id            String   @id @default(cuid())
  user          User     @relation(fields: [userId], references: [id])
  userId        String
  room          Room     @relation(fields: [roomId], references: [id])
  roomId        String
  checkIn       DateTime
  checkOut      DateTime
  nights        Int
  subtotalCents Int
  taxesCents    Int
  feesCents     Int
  totalCents    Int
  status        BookingStatus @default(PENDING)
  paymentIntentId String?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

enum BookingStatus {
  PENDING
  CONFIRMED
  CANCELED
  REFUNDED
}

model Review {
  id        String   @id @default(cuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  hotel     Hotel    @relation(fields: [hotelId], references: [id])
  hotelId   String
  rating    Int
  comment   String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
