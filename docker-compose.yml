version: '3.9'
services:
  db:
    image: postgres:15-alpine
    container_name: express_com_db
    environment:
      POSTGRES_DB: express_com
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - '5432:5432'
    volumes:
      - db-data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 5s
      retries: 5
      timeout: 5s

  api:
    build:
      context: .
      dockerfile: apps/api/Dockerfile
    container_name: express_com_api
    env_file: .env
    environment:
      DATABASE_URL: postgresql://postgres:postgres@db:5432/express_com?schema=public
      CORS_ORIGIN: http://localhost:3000
      NODE_ENV: development
    depends_on:
      db:
        condition: service_healthy
    ports:
      - '4000:4000'
    volumes:
      - ./apps/api:/usr/src/app/apps/api
      - ./prisma:/usr/src/app/prisma
    command: sh -c "npm run prisma:generate && npm run migrate:dev && npm run start:dev -w @express-com/api"

  web:
    build:
      context: .
      dockerfile: apps/web/Dockerfile
    container_name: express_com_web
    env_file: .env
    environment:
      NEXT_PUBLIC_API_BASE_URL: http://localhost:4000
      NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY: ${NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY}
    depends_on:
      - api
    ports:
      - '3000:3000'
    volumes:
      - ./apps/web:/usr/src/app/apps/web
    command: sh -c "npm run dev -w @express-com/web"

volumes:
  db-data:
